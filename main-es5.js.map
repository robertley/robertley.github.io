{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n\\n    <div class=\\\"row bottom-border\\\">\\n    \\n      <div class=\\\"col-6\\\">\\n        <!-- Material Form Elements -->\\n        <form *ngIf=\\\"showMaterial\\\" [formGroup]=\\\"formGroup1\\\" (ngSubmit)=\\\"submit()\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>First Name</mat-label>\\n                <input id=\\\"peepee\\\" formControlName=\\\"firstName\\\" matInput required/>\\n                <mat-error *ngIf=\\\"f1.firstName.errors\\\">First Name is required</mat-error>\\n                <mat-hint>Identical to your government ID</mat-hint>\\n              </mat-form-field>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Last Name</mat-label>\\n                <input formControlName=\\\"lastName\\\" matInput required/>\\n                <mat-error *ngIf=\\\"f1.lastName.errors\\\">Last Name is required</mat-error>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Street</mat-label>\\n                <input matInput/>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-3\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>State</mat-label>\\n                <mat-select>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                  <mat-option>DE</mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n    \\n            <div class=\\\"col-6\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>City</mat-label>\\n                <input matInput/>\\n              </mat-form-field>\\n            </div>\\n    \\n            <div class=\\\"col-3\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>ZIP</mat-label>\\n                <input matInput/>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Email</mat-label>\\n                <input matInput/>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <mat-form-field appearance=\\\"outline\\\">\\n                <mat-label>Birthday</mat-label>\\n                <input matInput [matDatepicker]=\\\"picker\\\">\\n                <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #picker></mat-datepicker>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"row non-mat-row\\\">\\n            <div class=\\\"col-2\\\">\\n              Employed?\\n            </div>\\n            <div class=\\\"col-8\\\">\\n              <mat-checkbox></mat-checkbox>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"row non-mat-row\\\">\\n            <div class=\\\"col-2\\\">\\n              Best Animal\\n            </div>\\n            <div class=\\\"col-8\\\">\\n              <mat-radio-group aria-label=\\\"Select an option\\\">\\n                <mat-radio-button value=\\\"1\\\">Red Knee Tarantula</mat-radio-button>\\n                <mat-radio-button value=\\\"2\\\">Human</mat-radio-button>\\n                <mat-radio-button value=\\\"3\\\">Capybara</mat-radio-button>\\n              </mat-radio-group>\\n            </div>\\n          </div>\\n        </form>\\n    \\n        <!-- inline bootstrap -->\\n        <form *ngIf=\\\"!showMaterial\\\" [formGroup]=\\\"formGroup2\\\" (ngSubmit)=\\\"submit()\\\">\\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">First Name *</label>\\n            <div class=\\\"col-9\\\">\\n              <input id=\\\"poopee\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f2.firstName.errors }\\\" />\\n              <div *ngIf=\\\"submitted && f2.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                First Name is required\\n              </div>\\n              <small class=\\\"form-text text-muted\\\">\\n                Identical to your government ID\\n              </small>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">Last Name *</label>\\n            <div class=\\\"col-9\\\">\\n              <input formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f2.lastName.errors }\\\">\\n              <div *ngIf=\\\"submitted && f2.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                Last Name is required\\n              </div>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">Street</label>\\n            <div class=\\\"col-9\\\">\\n              <input class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">State</label>\\n            <div class=\\\"col-9\\\">\\n              <select class=\\\"form-control\\\">\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>...</option>\\n              </select>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">City</label>\\n            <div class=\\\"col-9\\\">\\n              <input class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">ZIP</label>\\n            <div class=\\\"col-9\\\">\\n              <input class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">Email</label>\\n            <div class=\\\"col-9\\\">\\n              <input class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">Birthday</label>\\n            <div class=\\\"input-group col-9\\\">\\n              <div class=\\\"input-group-prepend\\\">\\n                <div class=\\\"input-group-text\\\">\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker2></mat-datepicker>\\n                </div>\\n              </div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"mm/dd/yyyy\\\" [matDatepicker]=\\\"picker2\\\">\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">Employed?</label>\\n            <div class=\\\"col-9\\\">\\n              <div class=\\\"form-check\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" value=\\\"\\\">\\n              </div>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-3 col-form-label\\\">Best Animal</label>\\n            <div class=\\\"col-9\\\">\\n              <div class=\\\"form-check-inline\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optradio\\\">Red Knee Tarantula\\n                </label>\\n              </div>\\n              <div class=\\\"form-check-inline\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optradio\\\">Human\\n                </label>\\n              </div>\\n              <div class=\\\"form-check-inline disabled\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optradio\\\">Capybara\\n                </label>\\n              </div>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    \\n    \\n    \\n      <!-- Bootstrap Form Elements -->\\n      <div class=\\\"col-6\\\">\\n        <form [formGroup]=\\\"formGroup3\\\" (ngSubmit)=\\\"submit()\\\">\\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-6\\\">\\n              <label>First Name *</label>\\n              <input formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f3.firstName.errors }\\\" />\\n              <div *ngIf=\\\"submitted && f3.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                First Name is required\\n              </div>\\n              <small class=\\\"form-text text-muted\\\">\\n                Identical to your government ID\\n              </small>\\n            </div>\\n            <div class=\\\"form-group col-6\\\">\\n              <label>Last Name *</label>\\n              <input formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f3.lastName.errors }\\\">\\n              <div *ngIf=\\\"submitted && f3.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                Last Name is required\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-12\\\">\\n              <label>Street</label>\\n              <input class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-3\\\">\\n              <label>State</label>\\n              <select class=\\\"form-control\\\">\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>DE</option>\\n                <option>...</option>\\n              </select>\\n            </div>\\n          \\n            <div class=\\\"form-group col-6\\\">\\n              <label>City</label>\\n              <input class=\\\"form-control\\\">\\n            </div>\\n          \\n            <div class=\\\"form-group col-3\\\">\\n              <label>ZIP</label>\\n              <input class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-12\\\">\\n              <label>Email</label>\\n              <input class=\\\"form-control\\\">\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-group col-6\\\">\\n              <label>Birthday</label>\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <div class=\\\"input-group-text\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker3></mat-datepicker>\\n                  </div>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"mm/dd/yyyy\\\" [matDatepicker]=\\\"picker3\\\">\\n              </div>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"form-row\\\">\\n            <div class=\\\"form-check-inline\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" value=\\\"\\\">Employed?\\n              </label>\\n            </div>\\n          </div>\\n          \\n          <div class=\\\"form-row\\\">\\n            <label class=\\\"mr-4 mt-1\\\">Best Animal</label>\\n            <div class=\\\"form-check-inline\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optradio\\\">Red Knee Tarantula\\n              </label>\\n            </div>\\n            <div class=\\\"form-check-inline\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optradio\\\">Human\\n              </label>\\n            </div>\\n            <div class=\\\"form-check-inline disabled\\\">\\n              <label class=\\\"form-check-label\\\">\\n                <input type=\\\"radio\\\" class=\\\"form-check-input\\\" name=\\\"optradio\\\">Capybara\\n              </label>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n    <button (click)=\\\"submit()\\\">Submit Form</button>\\n    <!-- <button (click)=\\\"showMaterial = !showMaterial\\\">toggle material</button> -->\\n\\n</div>\"","module.exports = \".container {\\n  background-color: white;\\n  height: 100vh;\\n  padding: 15px;\\n}\\n\\n.non-mat-row {\\n  padding-bottom: 1.34375em;\\n}\\n\\n.bottom-border {\\n  border-bottom: solid black 1px;\\n}\\n\\n.input-group-text {\\n  padding: 0;\\n  height: 29px;\\n  width: 30px;\\n}\\n\\n::ng-deep mat-datepicker-toggle .mat-icon-button {\\n  padding: 0;\\n  width: 29px;\\n  height: 29px;\\n  line-height: 29px;\\n}\\n\\n::ng-deep mat-datepicker-toggle svg {\\n  width: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFxSTGV5XFxEb2N1bWVudHNcXHByb2plY3RzXFxjb21wYXJlLW1hdGVyaWFsLWJvb3RzdHJhcC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0FDQ0Y7O0FEQ0E7RUFDRSx5QkFBQTtBQ0VGOztBREFBO0VBQ0UsOEJBQUE7QUNHRjs7QURDQTtFQUNFLFVBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtBQ0VGOztBRENFO0VBQ0UsVUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsaUJBQUE7QUNFSjs7QURDRTtFQUNFLFdBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgcGFkZGluZzogMTVweDtcclxufVxyXG4ubm9uLW1hdC1yb3cgeyAgICBcclxuICBwYWRkaW5nLWJvdHRvbTogMS4zNDM3NWVtO1xyXG59XHJcbi5ib3R0b20tYm9yZGVyIHtcclxuICBib3JkZXItYm90dG9tOiBzb2xpZCBibGFjayAxcHg7XHJcbn1cclxuXHJcbi8vIGRhdGUtcGlja2VyIGJ1dHRvblxyXG4uaW5wdXQtZ3JvdXAtdGV4dCB7XHJcbiAgcGFkZGluZzogMDtcclxuICBoZWlnaHQ6IDI5cHg7XHJcbiAgd2lkdGg6IDMwcHg7XHJcbn1cclxuOjpuZy1kZWVwIG1hdC1kYXRlcGlja2VyLXRvZ2dsZSB7XHJcbiAgLm1hdC1pY29uLWJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgd2lkdGg6IDI5cHg7XHJcbiAgICBoZWlnaHQ6IDI5cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjlweDtcclxuICB9XHJcbiAgXHJcbiAgc3ZnIHtcclxuICAgIHdpZHRoOiAxNnB4O1xyXG4gIH1cclxufVxyXG4iLCIuY29udGFpbmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGhlaWdodDogMTAwdmg7XG4gIHBhZGRpbmc6IDE1cHg7XG59XG5cbi5ub24tbWF0LXJvdyB7XG4gIHBhZGRpbmctYm90dG9tOiAxLjM0Mzc1ZW07XG59XG5cbi5ib3R0b20tYm9yZGVyIHtcbiAgYm9yZGVyLWJvdHRvbTogc29saWQgYmxhY2sgMXB4O1xufVxuXG4uaW5wdXQtZ3JvdXAtdGV4dCB7XG4gIHBhZGRpbmc6IDA7XG4gIGhlaWdodDogMjlweDtcbiAgd2lkdGg6IDMwcHg7XG59XG5cbjo6bmctZGVlcCBtYXQtZGF0ZXBpY2tlci10b2dnbGUgLm1hdC1pY29uLWJ1dHRvbiB7XG4gIHBhZGRpbmc6IDA7XG4gIHdpZHRoOiAyOXB4O1xuICBoZWlnaHQ6IDI5cHg7XG4gIGxpbmUtaGVpZ2h0OiAyOXB4O1xufVxuOjpuZy1kZWVwIG1hdC1kYXRlcGlja2VyLXRvZ2dsZSBzdmcge1xuICB3aWR0aDogMTZweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'compare-material-bootstrap';\n  \n  showMaterial = true;\n  submitted = false;\n  \n  formGroup1: FormGroup;\n  formGroup2: FormGroup;\n  formGroup3: FormGroup;\n  \n  ngOnInit() {\n    this.formGroup1 = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n    })\n    this.formGroup2 = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n    })\n    this.formGroup3 = new FormGroup({\n      firstName: new FormControl('', [Validators.required]),\n      lastName: new FormControl('', [Validators.required]),\n    })\n  }\n  \n  submit() {\n    console.log(this.formGroup2);\n    this.submitted = true;\n    if (this.formGroup2.invalid) {\n      return;\n    }\n  }\n  \n  get f1() {return this.formGroup1.controls}\n  get f2() {return this.formGroup2.controls}\n  get f3() {return this.formGroup3.controls}\n  \n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    ReactiveFormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatNativeDateModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}