{"version":3,"sources":["think.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","imageStyle","left","top","image0","image1","image2","image3","image4","image5","image6","image7","image8","image9","console","log","setTimeout","_this2","setState","bind","interval0","setInterval","changeCoordinates","_this3","interval1","startTime","_this4","interval2","_this5","interval3","_this6","interval4","_this7","interval5","clearInterval","interval","ind","x","document","body","offsetWidth","y","offsetHeight","style","i","randomX","Math","floor","random","randomY","push","react_default","a","createElement","className","src","think","alt","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bba870ae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/think.c6e333cb.png\";","import React, { Component } from 'react';\nimport think from './think.png';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      imageStyle : [\n        {\n          left: \"0px\",\n          top: \"0px\"\n        },\n        {\n          left: \"0px\",\n          top: \"0px\"\n        },\n        {\n          left: \"0px\",\n          top: \"0px\"\n        },\n        {\n          left: \"0px\",\n          top: \"0px\"\n        },\n        {\n          left: \"0px\",\n          top: \"0px\"\n        },\n        {\n          left: \"0px\",\n          top: \"0px\"\n        },\n        {\n          left: \"0px\",\n          top: \"0px\"\n        },\n        {\n          left: \"0px\",\n          top: \"0px\"\n        },\n        {\n          left: \"0px\",\n          top: \"0px\"\n        }\n      ],\n      image0 : false,\n      image1 : false,\n      image2 : false,\n      image3 : false,\n      image4 : false,\n      image5 : false,\n      image6 : false,\n      image7 : false,\n      image8 : false,\n      image9 : false\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"⠀⠰⡿⠿⠛⠛⠻⠿⣷\\n ⠀⠀⠀⠀⠀⠀⣀⣄⡀⠀⠀⠀⠀⢀⣀⣀⣤⣄⣀⡀\\n ⠀⠀⠀⠀⠀⢸⣿⣿⣷⠀⠀⠀⠀⠛⠛⣿⣿⣿⡛⠿⠷\\n\" + \n    \" ⠀⠀⠀⠀⠀⠘⠿⠿⠋⠀⠀⠀⠀⠀⠀⣿⣿⣿⠇\\n ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠁\\n\\n ⠀⠀⠀⠀⣿⣷⣄⠀⢶⣶⣷⣶⣶⣤⣀\\n ⠀⠀⠀⠀⣿⣿⣿⠀⠀⠀⠀⠀⠈⠙⠻⠗\\n\" + \n    \" ⠀⠀⠀⣰⣿⣿⣿⠀⠀⠀⠀⢀⣀⣠⣤⣴⣶⡄\\n ⠀⣠⣾⣿⣿⣿⣥⣶⣶⣿⣿⣿⣿⣿⠿⠿⠛⠃\\n ⢰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡄\\n ⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡁\\n\" + \n    \" ⠈⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠁\\n ⠀⠀⠛⢿⣿⣿⣿⣿⣿⣿⡿⠟\\n ⠀⠀⠀⠀⠀⠉⠉⠉\")\n\n    var startTime = 12000;\n\n    setTimeout(function() {\n      setTimeout(function() { this.setState({image0: true}) }.bind(this), 4000)\n      this.interval0 = setInterval(() => this.changeCoordinates(0), 4000)\n    }.bind(this), startTime)\n\n    setTimeout(function() {\n      setTimeout(function() { this.setState({image1: true}) }.bind(this), 4000)\n      this.interval1 = setInterval(() => this.changeCoordinates(1), 4000)\n    }.bind(this), startTime + 2200)\n\n    setTimeout(function() {\n      setTimeout(function() { this.setState({image2: true}) }.bind(this), 4000)\n      this.interval2 = setInterval(() => this.changeCoordinates(2), 4000)\n    }.bind(this), startTime + 4400)\n\n    setTimeout(function() {\n      setTimeout(function() { this.setState({image3: true}) }.bind(this), 4000)\n      this.interval3 = setInterval(() => this.changeCoordinates(3), 4000)\n    }.bind(this), startTime + 6600)\n\n    setTimeout(function() {\n      setTimeout(function() { this.setState({image4: true}) }.bind(this), 4000)\n      this.interval4 = setInterval(() => this.changeCoordinates(4), 4000)\n    }.bind(this), startTime + 8800)\n\n    setTimeout(function() {\n      setTimeout(function() { this.setState({image5: true}) }.bind(this), 4000)\n      this.interval5 = setInterval(() => this.changeCoordinates(5), 4000)\n    }.bind(this), startTime + 11000)\n  }\n  \n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  changeCoordinates(ind) {\n    var x = document.body.offsetWidth-100;\n    var y = document.body.offsetHeight-100;\n    var style = []\n    for (var i = 0; i < 10; i++) {\n      if (ind === i) {\n        var randomX = Math.floor(Math.random()*x);\n        var randomY = Math.floor(Math.random()*y);\n        style.push({\n          left: randomX + \"px\",\n          top: randomY + \"px\",\n        })\n      } else {\n        style.push(this.state.imageStyle[i])\n      }\n    }\n    this.setState({\n      imageStyle : style\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"notsure\">not sure</h1>\n        <h1 className=\"ru\">r u?</h1>\n        { this.state.image0 ? <img src={think} style={ this.state.imageStyle[0] } alt=\"hmm\"/> : null }\n        { this.state.image1 ? <img src={think} style={ this.state.imageStyle[1] } alt=\"hmm\"/> : null }\n        { this.state.image2 ? <img src={think} style={ this.state.imageStyle[2] } alt=\"hmm\"/> : null }\n        { this.state.image3 ? <img src={think} style={ this.state.imageStyle[3] } alt=\"hmm\"/> : null }\n        { this.state.image4 ? <img src={think} style={ this.state.imageStyle[4] } alt=\"hmm\"/> : null }\n        { this.state.image5 ? <img src={think} style={ this.state.imageStyle[5] } alt=\"hmm\"/> : null }\n        { this.state.image6 ? <img src={think} style={ this.state.imageStyle[6] } alt=\"hmm\"/> : null }\n        { this.state.image7 ? <img src={think} style={ this.state.imageStyle[7] } alt=\"hmm\"/> : null }\n        { this.state.image8 ? <img src={think} style={ this.state.imageStyle[8] } alt=\"hmm\"/> : null }\n        { this.state.image9 ? <img src={think} style={ this.state.imageStyle[9] } alt=\"hmm\"/> : null }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}